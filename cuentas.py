# -*- coding: utf-8 -*-
"""Untitled34.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jTA-0iaOyPYAEM_iNuJAe1L1SpcXhsyy
"""

import datetime
from datetime import date

class Cuenta(object):
  def __init__ (self, titular, monto_inicio=0, numero_cuenta=0):
    self.titular = titular
    self.cantidad = monto_inicio
    self.numero_cuenta = numero_cuenta
    self.activa = True
    self.movimientos = []
  
  def aplicar_deposito(self, monto):
    self.cantidad = self.cantidad + monto
    self.crear_movimiento("Deposito", monto)

  def aplicar_extraccion(self, monto):
    self.cantidad = self.cantidad - monto
    self.crear_movimiento("Extraccion", monto)

  def aplicar_transferencia(self, monto):
    self.cantidad = self.cantidad - monto
    self.crear_movimiento("Transferencia", monto)  

  def crear_movimiento(self, descripcion, monto):
    movimiento= MovimientoCuenta(descripcion, monto)
    self.movimientos.append(movimiento)  

  def __str__(self):
    print("Cuenta Comun", self.cantidad)

class CuentaJoven(Cuenta):
  def __init__(self, bonificacion, monto_inicio=0, numero_cuenta=0):
    Cuenta.__init__(self, monto_inicio, numero_cuenta)
    self.bonificacion = (bonificacion/100)

  def aplicar_deposito(self, monto):
    self.cantidad = self.cantidad + monto
    self.cantidad = self.cantiadad + (self.cantidad*self.bonificacion)
    self.crear_movimiento("Deposito", monto)

  def aplicar_extraccion(self, monto):
    self.cantidad = self.cantidad - monto
    self.crear_movimiento("Extraccion", monto)

  def aplicar_transferencia(self, monto):
    self.cantidad = self.cantidad - monto
    self.crear_movimiento("Transferencia", monto)  

  def crear_movimiento(self, descripcion, monto):
    movimiento= MovimientoCuenta(descripcion, monto)
    self.movimientos.append(movimiento)  



  def __str__(self):
    print("Cuenta Joven", self.cantidad)


class MovimientoCuenta():
 def __init__(self, descripcion, monto_de_movimiento):
   self.fecha_hora = datetime.datetima.now()
   self.descripcion = descripcion 
   self.monto = monto_de_movimiento
 
 def __str__(self):
   return f"{self.fecha_hora}. {self.descripcion} ${self.monto}"